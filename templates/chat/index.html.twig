{% extends 'base.html.twig' %}

{% block title %}Assistant Médical Virtuel{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
      /* Import Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');

/* Global Styles */
body {
    font-family: 'Poppins', sans-serif;
    background: #f3f7fb;
    margin: 0;
    padding: 0;
}

/* Chat Container */
.chat-container {
    max-width: 900px;
    margin: 3rem auto;
    background: #fff;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    overflow: hidden;
}

/* Chat Header */
.chat-header {
    background: #007bff;
    color: white;
    padding: 1.5rem;
    text-align: center;
    font-size: 1.5rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.chat-header i {
    font-size: 1.8rem;
}

/* Chat Messages */
.chat-messages {
    height: 450px;
    overflow-y: auto;
    padding: 1.5rem;
    background: #f9fbfc;
    border-bottom: 1px solid #dee2e6;
}

.message {
    margin-bottom: 1rem;
    padding: 1rem 1.5rem;
    border-radius: 15px;
    max-width: 80%;
    font-size: 1rem;
    line-height: 1.6;
    position: relative;
    display: inline-block;
    animation: fadeIn 0.3s ease-in-out;
}

/* User Message */
.user-message {
    background: #e0f2fe;
    color: #0277bd;
    margin-left: auto;
    text-align: right;
    border: 1px solid #81d4fa;
}

/* Bot Message */
.bot-message {
    background: #ffffff;
    color: #333;
    margin-right: auto;
    border: 1px solid #cfd8dc;
}

/* Chat Input */
.chat-input {
    display: flex;
    padding: 1.2rem;
    background: #f3f7fb;
    border-top: 1px solid #dee2e6;
    align-items: center;
}

.chat-input input {
    flex-grow: 1;
    padding: 0.8rem 1.2rem;
    border: 1px solid #ced4da;
    border-radius: 50px;
    font-size: 1rem;
    background: #fff;
    outline: none;
    transition: all 0.2s;
}

.chat-input input:focus {
    border-color: #007bff;
}

.chat-input button {
    padding: 0.8rem 1.5rem;
    background: #007bff;
    border: none;
    border-radius: 50px;
    color: white;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s;
    display: flex;
    align-items: center;
    gap: 8px;
}

.chat-input button:hover {
    background: #0056b3;
}

/* Loading Message */
.loading {
    background: #f8f9fa;
    color: #666;
    font-style: italic;
    padding: 0.6rem 1.2rem;
    margin: 0.6rem 0;
    border-radius: 10px;
    text-align: center;
}

/* Animations */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

    </style>
{% endblock %}

{% block body %}
<br><br><br><br><br><br><br><br><br><br>
    <div class="page-container">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-10">
                    <div class="service-card">
                        <div class="chat-container">
                            <div class="chat-header">
                                <h2 class="mb-2"><i class="fas fa-robot me-2"></i>Assistant Médical Virtuel</h2>
                                <p class="mb-0">Je peux vous aider à trouver des informations sur nos services médicaux</p>
                            </div>

                            <div class="chat-messages" id="chat">
                                <div class="message bot-message">
                                    Bonjour ! Je suis votre assistant virtuel. Je peux vous aider à :
                                    <ul>
                                        <li>Trouver un médecin spécialiste</li>
                                        <li>Comprendre nos services médicaux</li>
                                        <li>Obtenir des informations sur les consultations</li>
                                        <li>Répondre à vos questions générales sur la santé</li>
                                    </ul>
                                    Comment puis-je vous aider aujourd'hui ?
                                </div>
                            </div>

                            <div class="chat-input">
                                <div class="d-flex align-items-center gap-2">
                                    <input type="text" 
                                           id="message" 
                                           class="form-control" 
                                           placeholder="Posez votre question ici..."
                                           autocomplete="off"
                                           required>
                                    <button onclick="sendMessage()" class="btn btn-primary d-flex align-items-center">
                                        <i class="fas fa-paper-plane me-2"></i>
                                        Envoyer
                                    </button>
                                </div>
                                <input type="hidden" name="token" value="{{ csrf_token('chat-token') }}">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        async function sendMessage() {
            const messageInput = document.getElementById('message');
            const message = messageInput.value.trim();
            const token = document.querySelector('input[name="token"]').value;
            
            if (!message) return;
            
            const chatDiv = document.getElementById('chat');
            const sanitizedMessage = message.replace(/</g, "&lt;").replace(/>/g, "&gt;");

            // Add user message
            chatDiv.insertAdjacentHTML('beforeend', `
                <div class="message user-message">${sanitizedMessage}</div>
                <div class="message bot-message loading">En train d'écrire...</div>
            `);

            messageInput.value = '';
            messageInput.disabled = true;

            try {
                const response = await fetch(`/chatbot?message=${encodeURIComponent(message)}`, {
                    method: 'GET'
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                console.log('Response data:', data); // Debug log
                
                // Remove loading message
                document.querySelector('.loading').remove();

                // Convert markdown-like content to HTML
                const formattedResponse = data.response
                    .replace(/#{3}\s(.*?)\n/g, '<h3>$1</h3>')
                    .replace(/#{2}\s(.*?)\n/g, '<h2>$1</h2>')
                    .replace(/#{1}\s(.*?)\n/g, '<h1>$1</h1>')
                    .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                    .replace(/\*(.*?)\*/g, '<em>$1</em>')
                    .replace(/\n/g, '<br>')
                    .replace(/- (.*?)(?:\n|$)/g, '<li>$1</li>')
                    .replace(/<li>/g, '<ul><li>')
                    .replace(/<\/li>(?!\s*<li>)/g, '</li></ul>');

                // Add formatted bot response
                chatDiv.insertAdjacentHTML('beforeend', `
                    <div class="message bot-message">
                        <div class="formatted-response">
                            ${formattedResponse}
                        </div>
                    </div>
                `);
            } catch (error) {
                console.error('Error:', error); // Debug log
                document.querySelector('.loading').remove();
                chatDiv.insertAdjacentHTML('beforeend', `
                    <div class="message bot-message">
                        Une erreur est survenue: ${error.message}
                    </div>
                `);
            } finally {
                messageInput.disabled = false;
                messageInput.focus();
                chatDiv.scrollTop = chatDiv.scrollHeight;
            }
        }

        // Add Enter key support
        document.getElementById('message').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                sendMessage();
            }
        });
    </script>
{% endblock %}

